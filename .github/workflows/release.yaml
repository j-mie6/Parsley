name: Release

on:
  push:
    branches:
      - master
    tags:
      - '*'
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    if: >-
      !contains(github.event.head_commit.message, '[no release]') &&
      !contains(github.event.head_commit.message, '[skip release]') &&
      !contains(github.event.head_commit.message, '[skip ci]')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Setup Scala
        uses: olafurpg/setup-scala@v10

      - name: Setup GPG
        uses: olafurpg/setup-gpg@v3

      - name: Cache Coursier
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: sbt-coursier-cache

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: ~/.sbt
          key: sbt-${{ hashFiles('**/build.sbt') }}

      - name: Publish JVM
        run: sbt ci-release
        env:
          CI_RELEASE:          +publishSigned
          CI_SNAPSHOT_RELEASE: +publishSigned
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

      - name: Publish JS
        run: sbt ci-release
        env:
          CI_RELEASE:          +parsleyJS/publishSigned
          CI_SNAPSHOT_RELEASE: +parsleyJS/publishSigned
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

      - name: Publish Native
        run: sbt ci-release
        env:
          CI_RELEASE:          +parsleyNative/publishSigned
          CI_SNAPSHOT_RELEASE: +parsleyNative/publishSigned
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
