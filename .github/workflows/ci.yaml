name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  check-duplicate:
    name: Check duplicate action
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}

    steps:
      - name: Check duplicate
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.0
        with:
          cancel_others: false
          concurrent_skipping: 'same_content'
          do_not_skip: '["workflow_dispatch", "schedule", "pull_request"]'

  validate:
    name: Scala ${{ matrix.scala }}, Java ${{ matrix.java }}
    runs-on: ubuntu-20.04
    needs: check-duplicate
    if: >-
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, '[skip jvm]')

    env:
      SCALA_VERSION: ${{ matrix.scala }}

    strategy:
      fail-fast: false
      matrix:
        java: [adopt@1.8, adopt@1.11, openjdk@1.17]
        scala: [2.12.15, 2.13.8, 3.1.2]
        experimental: [false]

    steps:
      - name: Checkout repository
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: actions/checkout@v2.3.4

      - name: Setup Scala
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache Coursier
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: sbt-coursier-cache

      - name: Cache SBT
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.sbt
          key: sbt-${{ hashFiles('**/build.sbt') }}

      - name: Build
        if: needs.check-duplicate.outputs.should_skip != 'true'
        run: sbt ++$SCALA_VERSION compile

      - name: Test
        if: needs.check-duplicate.outputs.should_skip != 'true'
        run: sbt ++$SCALA_VERSION test

      - name: Scaladoc
        if: needs.check-duplicate.outputs.should_skip != 'true'
        run: sbt ++$SCALA_VERSION doc

  # This is largely temporary, we'll find a better way to do this...
  validate-js:
    name: Scala-JS ${{ matrix.scala }}, Node ${{ matrix.node }}
    runs-on: ubuntu-20.04
    needs: check-duplicate
    if: >-
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, '[skip js]')

    env:
      SCALA_VERSION: ${{ matrix.scala }}

    strategy:
      fail-fast: false
      matrix:
        node: [16, 17]
        scala: [2.12.15, 2.13.8, 3.1.2]

    steps:
      - name: Checkout repository
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: actions/checkout@v2.3.4

      - name: Setup Node
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}

      - name: Setup Scala
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: olafurpg/setup-scala@v10

      - name: Cache Coursier
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: sbt-coursier-cache

      - name: Cache SBT
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.sbt
          key: sbt-${{ hashFiles('**/build.sbt') }}

      - name: Build
        if: needs.check-duplicate.outputs.should_skip != 'true'
        run: sbt ++$SCALA_VERSION parsleyJS/compile

      - name: Test
        if: needs.check-duplicate.outputs.should_skip != 'true'
        run: sbt ++$SCALA_VERSION parsleyJS/test

      - name: Scaladoc
        if: needs.check-duplicate.outputs.should_skip != 'true'
        run: sbt ++$SCALA_VERSION parsleyJS/doc

  validate-native:
    name: Scala-Native ${{ matrix.scala }} LLVM 12
    runs-on: ubuntu-20.04
    needs: check-duplicate
    if: >-
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, '[skip native]')

    env:
      SCALA_VERSION: ${{ matrix.scala }}

    strategy:
      fail-fast: false
      matrix:
        scala: [2.12.15, 2.13.8, 3.1.2]

    steps:
      - name: Checkout repository
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: actions/checkout@v2.3.4

      - name: Cache LLVM and Clang
        if: needs.check-duplicate.outputs.should_skip != 'true'
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/llvm
          key: llvm-12.0

      - name: Setup LLVM + Clang
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: KyleMayes/install-llvm-action@v1.1.1
        with:
          version: "12.0"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Setup Scala
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: olafurpg/setup-scala@v10

      - name: Cache Coursier
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: sbt-coursier-cache

      - name: Cache SBT
        if: needs.check-duplicate.outputs.should_skip != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.sbt
          key: sbt-${{ hashFiles('**/build.sbt') }}

      - name: Build
        if: needs.check-duplicate.outputs.should_skip != 'true'
        run: sbt ++$SCALA_VERSION parsleyNative/compile

      - name: Test
        if: needs.check-duplicate.outputs.should_skip != 'true'
        run: sbt ++$SCALA_VERSION parsleyNative/test

      - name: Scaladoc
        if: needs.check-duplicate.outputs.should_skip != 'true'
        run: sbt ++$SCALA_VERSION parsleyNative/doc
  # End attrocity

  coverage:
    name: Test Coverage
    runs-on: ubuntu-20.04
    needs: validate
    if: >-
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, '[skip jvm]') &&
      (github.ref == 'refs/heads/master' && (needs.validate.result == 'success' || needs.validate.result == 'skipped') ||
      github.event_name == 'pull_request' && (needs.validate.result == 'success' || needs.validate.result == 'skipped'))

    env:
      SCALA_VERSION: 2.13.8

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4

      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11

      - name: Restore cached Coursier
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: sbt-coursier-cache

      - name: Restore cached SBT
        uses: actions/cache@v2
        with:
          path: ~/.sbt
          key: sbt-${{ hashFiles('**/build.sbt') }}

      - name: Test with coverage
        run: sbt ++$SCALA_VERSION clean coverage test

      - name: Coverage report
        run: sbt ++$SCALA_VERSION coverageReport

      - name: Upload coverage to Code Climate
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: d2376ef4077556821a44dd82803411deea8fd904d5008713754dda5f3ab42875
        with:
          coverageLocations: ${{github.workspace}}/jvm/target/scala-2.13/coverage-report/cobertura.xml:cobertura


  semver-check:
    name: Check SemVer Policy
    runs-on: ubuntu-20.04
    needs: validate
    if: >-
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, '[skip jvm]') &&
      (github.ref == 'refs/heads/master' && (needs.validate.result == 'success' || needs.validate.result == 'skipped') ||
       github.event_name == 'pull_request' && (needs.validate.result == 'success' || needs.validate.result == 'skipped'))

    env:
      SCALA_VERSION: 2.13.7

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11

      - name: Restore cached Coursier
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: sbt-coursier-cache

      - name: Restore cached SBT
        uses: actions/cache@v2
        with:
          path: ~/.sbt
          key: sbt-${{ hashFiles('**/build.sbt') }}

      - name: Check version computed
        run: sbt dynverAssertVersion

      - name: Ensure policy matches changes
        run: sbt versionPolicyCheck